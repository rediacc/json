services:
  kong-database:
    image: postgres:13-alpine
    container_name: ${CONTAINER_NAME}-database
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /pgdata
    volumes:
      - ./data:/pgdata
    tmpfs:
      - /var/lib/postgresql
    networks:
      - kong-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  kong:
    image: kong:latest
    container_name: ${CONTAINER_NAME}
    restart: always
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PORT: 5432
      KONG_PG_DATABASE: ${POSTGRES_DB}
      KONG_PG_USER: ${POSTGRES_USER}
      KONG_PG_PASSWORD: ${POSTGRES_PASSWORD}
      KONG_PROXY_ACCESS_LOG: ${KONG_PROXY_ACCESS_LOG}
      KONG_ADMIN_ACCESS_LOG: ${KONG_ADMIN_ACCESS_LOG}
      KONG_PROXY_ERROR_LOG: ${KONG_PROXY_ERROR_LOG}
      KONG_ADMIN_ERROR_LOG: ${KONG_ADMIN_ERROR_LOG}
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_DECLARATIVE_CONFIG: ${KONG_DECLARATIVE_CONFIG}
    ports:
      - "8000"
      - "8443"
      - "8001"
      - "8444"
    depends_on:
      kong-database:
        condition: service_healthy
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  konga:
    image: pantsel/konga:latest
    container_name: ${CONTAINER_NAME}-konga
    restart: always
    environment:
      NODE_ENV: ${NODE_ENV}
      TOKEN_SECRET: ${KONGA_TOKEN_SECRET}
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_DATABASE: ${POSTGRES_DB}
    ports:
      - "1337"
    depends_on:
      - kong-database
    networks:
      - kong-net

networks:
  kong-net:
    external: true