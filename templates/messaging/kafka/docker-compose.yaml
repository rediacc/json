services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: ${CONTAINER_NAME}-zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181"
    volumes:
      - ./data/zookeeper:/var/lib/zookeeper/data
      - ./data/zookeeper-logs:/var/lib/zookeeper/log
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: ${CONTAINER_NAME}-broker
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPICS}
      KAFKA_LOG_RETENTION_HOURS: ${KAFKA_LOG_RETENTION_HOURS}
      KAFKA_LOG_SEGMENT_BYTES: ${KAFKA_LOG_SEGMENT_BYTES}
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: ${KAFKA_LOG_RETENTION_CHECK_MS}
      KAFKA_COMPRESSION_TYPE: ${KAFKA_COMPRESSION_TYPE}
    ports:
      - "9092"
    volumes:
      - ./data/kafka:/var/lib/kafka/data
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions", "--bootstrap-server", "localhost:9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka-rest:
    image: confluentinc/cp-kafka-rest:7.5.0
    container_name: ${CONTAINER_NAME}-rest
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_REST_HOST_NAME: kafka-rest
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
    ports:
      - "8082"
    networks:
      - kafka-network

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:latest
    container_name: ${CONTAINER_NAME}-topics-ui
    restart: always
    depends_on:
      - kafka-rest
    environment:
      KAFKA_REST_PROXY_URL: http://kafka-rest:8082
      PROXY: "true"
    ports:
      - "8000"
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge